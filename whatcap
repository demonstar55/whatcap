#! /usr/bin/env python
# -*- coding: utf-8 -*-
# vim:fenc=utf-8

##############################################################
# whatcap - Fixes capitalization of tags of FLAC files
#            according to what.cd guide lines.
# Created by demonstar55.
# GPL v3: http://www.gnu.org/licenses/gpl.txt
##############################################################

"""
    Fixes capitalization of tags in various music formats
    Follows what.cd guide lines (mostly)
    Requires mutagen
"""

import os
from fnmatch import fnmatch
from optparse import OptionParser
from mutagen.flac import FLAC
from mutagen.oggvorbis import OggVorbis
from mutagen.easyid3 import EasyID3
from mutagen.easymp4 import EasyMP4

VERSION = "1.5.2"
LOWER = set(['a', 'an', 'the', 'and', 'or', 'nor', 'but', 'for', 'yet', 'so',
             'as', 'at', 'by', 'for', 'in', 'of', 'on', 'to', 'from', 'vs.',
             'v.'])

def processtags(tags):
    """Corrects capitalizations"""

    for tag in ('TITLE', 'ALBUM', 'ARTIST'):
# lambda function lower cases if in set, upper cases if not
        newtags = [(lambda x: x[0].lower() + x[1:] if x.lower() in LOWER else \
                   x[0].upper() + x[1:])(word) for word in tags[tag][0].split()]
# we could do more logic above, but fuck it, force first to be upper
        newtags[0] = newtags[0][0].upper() + newtags[0][1:]
        tags[tag] = ' '.join(newtags)
    return


def main():
    usage_text = "%prog [options] /path/to/album"
    info_text = "Depends on mutagen."
    parser = OptionParser(usage=usage_text, version="%prog " + VERSION,
                          epilog=info_text)
    parser.add_option('-v', '--verbose', action='store_true', dest='verbose',
                      default=False, help='increase verbosity (Default: False)')
    parser.add_option('-n', '--no-act', action='store_true', dest='noact',
                      default=False,
                      help='No Action: show what would have been changed, '
                      ' turns on verbose (Default: False)')
    (options, musicdirs) = parser.parse_args()

    if options.noact:
        options.verbose = True

    if len(musicdirs) < 1:
        parser.error("Incorrect number of arguments")

    for musicdir in musicdirs:
        musicdir = os.path.abspath(musicdir)
        musicfiles = [os.path.join(root, name)
                      for root, _, files in os.walk(musicdir)
                      for name in files
                      if fnmatch(name, '*.flac') or fnmatch(name, '*.mp3') or
                      fnmatch(name, '*.ogg') or fnmatch(name, '*.m4a')]

        for musicfile in musicfiles:
            print 'Now processing ' + musicfile

# I could use mutagen.File here, but that is much slower ...
            if fnmatch(musicfile, '*.flac'):
                audio = FLAC(musicfile)
            elif fnmatch(musicfile, '*.mp3'):
                audio = EasyID3(musicfile)
            elif fnmatch(musicfile, '*.ogg'):
                audio = OggVorbis(musicfile)
            elif fnmatch(musicfile, '*.m4a'):
                audio = EasyMP4(musicfile)
            else:
                print "No music file was passed."

            processtags(audio)
            if options.verbose:
                print 'The new metadata:'
                for tag in ('TITLE', 'ALBUM', 'ARTIST'):
                    print '\t' + tag + ':\t' + audio[tag][0]
            if not options.noact:
                audio.save()

    return 0

if __name__ == '__main__':
    main()

# vim: tabstop=4 expandtab shiftwidth=4 softtabstop=4
